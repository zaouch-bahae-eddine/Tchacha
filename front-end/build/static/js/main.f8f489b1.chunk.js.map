{"version":3,"sources":["Queries/AuthQuery.js","Auth/AuthProvider.js","Component/LogoutBar.js","Component/ChannelContainer.js","Queries/ChannelQuery.js","Component/HiddenCover.js","Component/SettingMenuStyle.js","Component/ChannelItem.js","Component/Modal.js","Form/ChannelForm.js","page/Channel.js","page/Home.js","Component/MemberContainer.js","Component/FirstLetterDesign.js","Component/MemberItem.js","Form/MemberFrom.js","page/Member.js","Component/AlertMessage.js","Component/FormStyle.js","Component/TitleStyle.js","page/Register.js","page/SignIn.js","Component/MessageContainer.js","Component/MessageInput.js","Queries/MessageQuery.js","Component/MessageItem.js","Form/MessageForm.js","page/Tchatchat.js","App.js","index.js"],"names":["LOGIN","gql","REGISTER","authContext","createContext","AuthProvider","children","auth","useProvideAuth","Provider","value","useAuth","useContext","useState","user","setUser","useEffect","localStorage","getItem","undefined","userToken","split","JSON","parse","atob","useMutation","onCompleted","data","login","status","setItem","jwt","LoginMutation","register","RegisterMutation","email","password","a","variables","loginEmail","loginPassword","result","logout","credetial","registerUser","name","userName","console","log","TaskContainerStyle","styled","div","UserNameStyle","LogoutButtonn","button","LogoutBar","onClick","TasksGroupeHeaderStyle","AddTaskStyle","ChannelContainer","props","colomunTitle","dispalayChannelModal","GET_CHANNEL","ADD_CHANNEL","SET_CHANNEL","DELETE_CHANNEL","MEMBERS_CHANNEL","ADD_MEMBER","DELETE_MEMBER","GET_CHANNEL_BY_ID","HiddenCoverStyle","color","visible","HiddenCover","clickAction","SettingMenuStyle","ul","size","ChannelItemStyle","MembersLink","Link","ChannelHeader","ChannelNameStyle","ToMessagesStyle","ChannelItem","displaySetting","setDisplaySetting","toggelSetting","prev","update","refetch","deleteChannelMutation","to","id","deleteChannelId","ModalStyle","ModalHeader","ModalContentStyle","form","Modal","className","title","closeModal","InputGroup","ModalButton","ChannelForm","type","ignoreResults","applyChange","htmlFor","formInput","channelName","onChange","e","handleInputChange","preventDefault","replace","createChannelName","setChannelNameId","setChannelNameName","closeChannelModal","resetForm","alert","handleSubmit","Channel","displayAddChannelModal","setDisplayAddChannelModal","displaySetChannelModal","setDisplaySetChannelModal","channelFormInput","setChannelFormInput","useQuery","pollInterval","loading","error","message","resetChannelForm","target","formInputEdit","channels","map","channel","HomeTitle","h1","SignLink","Home","MemberContainer","homeBackLink","dispalayMemberModal","CircleStyle","FirstLetterDesign","firstLetter","word","charAt","toUpperCase","MemberItemStyle","MemberDataStyle","LigneSeparatorStyle","DeleteMemberStyle","MemberItem","deleteMemberMutaion","channelId","rmMemberFromChannelEmail","rmMemberFromChannelChannel","MemberForm","memberEmail","addMemberToChannelEmail","addMemberToChannelChannel","closeMemberModal","Member","useParams","displayAddMemberModal","setDisplayAddMemberModal","memberId","memberName","memberFormInput","setMemberFormInput","getMembersChannel","getChannelById","getChaneByIdChannelId","resetMemberForm","members","member","AlertMessageStype","p","AlertMessage","FormStyle","TitleStyle","Register","passwordCheck","credential","setCredential","display","msg","alertMessage","setAlertMessage","inputChangeHandler","newCredential","RegisterHandler","trim","SignIn","loginHandler","ContentStyle","MessageContainer","columnTitle","MessageInputFormStyle","TextAreaMessageStyle","textarea","SendButton","MessageInput","setMessage","handelInputChange","send","sendMessage","GET_MESSAGE","ADD_MESSAGE","SET_MESSAGE","DELETE_MESSAGE","MessageItemStyle","AuthorNameStyle","MessageStyle","MessageItem","setdisplaySetting","deleteMessageMutation","showModal","text","rmMessageMsgId","MessageForm","setMessageMsgId","setMessageText","close","Tchatchat","displayModal","setDisplayModal","setFormInput","AddMessageMutation","getMessageChannel","messages","addMessageChannel","addMessageText","App","exact","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","authorization","client","ApolloClient","cache","InMemoryCache","link","concat","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f8f489b1.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const LOGIN = gql`\r\n    mutation LoginMutation($loginEmail: String!, $loginPassword: String!) {\r\n        login(email: $loginEmail, password: $loginPassword) {\r\n            ...on Error{\r\n                __typename\r\n                msg\r\n                status\r\n            }\r\n            ...on Token{\r\n                __typename\r\n                jwt\r\n                msg\r\n                status\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport const REGISTER = gql`\r\n    mutation RegisterMutation($registerUser: UserInput!) {\r\n        register(user: $registerUser) {\r\n            ...on Error{\r\n                msg\r\n                status\r\n                __typename\r\n            }\r\n            ...on Token{\r\n                jwt\r\n                msg\r\n                status\r\n                __typename\r\n            }\r\n        }\r\n    }\r\n`;","import { useMutation } from '@apollo/client';\r\nimport React, { useState, useContext, createContext, useEffect } from 'react';\r\nimport { LOGIN, REGISTER } from '../Queries/AuthQuery';\r\n\r\nconst authContext = createContext();\r\nexport function AuthProvider({ children }) {\r\n    const auth = useProvideAuth();\r\n    return (\r\n        <authContext.Provider value={auth}>\r\n            {children}\r\n        </authContext.Provider>\r\n    )\r\n};\r\nexport function useAuth() {\r\n    return useContext(authContext);\r\n};\r\n\r\nconst useProvideAuth = () => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('token') != \"\" && localStorage.getItem('token') != undefined){\r\n            const userToken =  localStorage.getItem('token').split('.')[1];\r\n            setUser(JSON.parse(atob(userToken)));\r\n        }\r\n    }, [])\r\n\r\n    const [LoginMutation, {data}] = useMutation(LOGIN, {\r\n        onCompleted: (data) => {\r\n            if(data.login.status === 200){\r\n                localStorage.setItem('token', data.login.jwt);\r\n                setUser(JSON.parse(atob(data.login.jwt.split('.')[1])));\r\n            }\r\n        }\r\n    });\r\n    const [RegisterMutation] = useMutation(REGISTER, {\r\n        onCompleted: (data) => {\r\n            if(data.register.status >= 200 && data.register.status < 300){\r\n                localStorage.setItem('token', data.register.jwt);\r\n                setUser(JSON.parse(atob(data.register.jwt.split('.')[1])));\r\n            }\r\n        }\r\n    });\r\n    const login = async (email, password) => {\r\n        const result = await LoginMutation({variables: {loginEmail: email, loginPassword: password}});\r\n        return result.data.login;\r\n    };\r\n\r\n    const register = async (credetial) => {\r\n        try{\r\n            const result = await RegisterMutation({variables: {registerUser: {\r\n                name: credetial.userName,\r\n                email: credetial.email,\r\n                password: credetial.password\r\n            }}});\r\n            console.log(result);\r\n            return result.data.register;\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.setItem('token', \"\");\r\n        setUser(null);\r\n    }\r\n    return {\r\n        user,\r\n        login,\r\n        logout,\r\n        register\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\n\r\nconst TaskContainerStyle = styled.div`\r\n\r\n    align-items: center;\r\n    width: 320px;\r\n    background-color: #eceefd;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n    & > div{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 15px 20px;\r\n    }\r\n\r\n`;\r\nconst UserNameStyle = styled.div`\r\n    font-size: 16pt;\r\n    color: #4452a6;\r\n`;\r\nconst LogoutButtonn = styled.button`\r\n    background-color: #ff000091;\r\n    border: none;\r\n    width: 90px;\r\n    height: 40px;\r\n    border-radius: 7px;\r\n    color: white;\r\n    cursor: pointer;\r\n`;\r\nfunction LogoutBar() {\r\n    const auth = useAuth();\r\n    return (\r\n        <Fragment>\r\n            {\r\n                auth.user != null? \r\n                <TaskContainerStyle>\r\n                    <div>\r\n                        <UserNameStyle>\r\n                            {auth.user.name}\r\n                        </UserNameStyle>\r\n                        <LogoutButtonn onClick={() => auth.logout()}>Déconnecter</LogoutButtonn>\r\n                    </div>\r\n                </TaskContainerStyle>\r\n                : \"\"\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default LogoutBar\r\n","import styled from 'styled-components';\r\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai';\r\n\r\nconst TaskContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 320px;\r\n    background-color: #eceefd;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n`;\r\nconst TasksGroupeHeaderStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 90%;\r\n\r\n    background-color: #eceefd;\r\n    svg {\r\n        color: #4452a6;\r\n        font-size: 16pt;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    div{\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst AddTaskStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 90%;\r\n    max-width: 280px;\r\n    height: 50px;\r\n    margin-bottom: 17px;\r\n    background-color: #d9defa;\r\n    border-radius: 10px;\r\n    color: #4452a6;\r\n    svg{\r\n        margin: 0 12px;\r\n        font-size: 16pt;\r\n    }\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nfunction ChannelContainer(props) {\r\n\r\n    return (\r\n        <TaskContainerStyle>\r\n            <TasksGroupeHeaderStyle>\r\n                <h2>{props.colomunTitle} Channels</h2>\r\n                <div onClick={() => props.dispalayChannelModal()}>\r\n                <AiOutlineAppstoreAdd />\r\n\r\n                </div>\r\n            </TasksGroupeHeaderStyle>\r\n            {props.children}\r\n            <AddTaskStyle onClick={() => props.dispalayChannelModal()}> <AiOutlineAppstoreAdd /> <span>Add a channel</span></AddTaskStyle>\r\n        </TaskContainerStyle>\r\n    )\r\n}\r\n\r\nexport default ChannelContainer","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CHANNEL = gql`\r\n    query Query {\r\n        channels: getChannels {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_CHANNEL = gql`\r\n    mutation CreateChannelMutation($createChannelName: String!) {\r\n        createChannel(name: $createChannelName) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_CHANNEL = gql`\r\n    mutation SetChannelNameMutation($setChannelNameId: ID!, $setChannelNameName: String!) {\r\n        setChannelName(id: $setChannelNameId, name: $setChannelNameName) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_CHANNEL = gql`\r\n    mutation DeleteChannelMutation($deleteChannelId: ID!) {\r\n        deleteChannel(id: $deleteChannelId) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const MEMBERS_CHANNEL = gql`\r\n    query Query($getMembersChannel: ID!) {\r\n        members: getMembers(channel: $getMembersChannel) {\r\n            id\r\n            email\r\n            name\r\n            __typename\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_MEMBER = gql`\r\n    mutation AddMemberToChannelMutation($addMemberToChannelEmail: String!, $addMemberToChannelChannel: ID!) {\r\n        addMemberToChannel(email: $addMemberToChannelEmail, channel: $addMemberToChannelChannel) {\r\n            id\r\n            email\r\n            name\r\n            __typename\r\n        }\r\n    }\r\n`;\r\nexport const DELETE_MEMBER = gql`\r\n    mutation RmMemberFromChannelMutation($rmMemberFromChannelEmail: String!, $rmMemberFromChannelChannel: ID!) {\r\n        rmMemberFromChannel(email: $rmMemberFromChannelEmail, channel: $rmMemberFromChannelChannel) {\r\n            id\r\n            name\r\n            email\r\n            __typename\r\n        }\r\n    }\r\n`;\r\nexport const GET_CHANNEL_BY_ID = gql`\r\n    query Query($getChaneByIdChannelId: ID!) {\r\n        channel: getChaneById(channelId: $getChaneByIdChannelId) {\r\n            id\r\n            name\r\n            __typename\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst HiddenCoverStyle = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 8;\r\n    background-color: ${props => props.color? props.color : \"#fff0\"};\r\n    display: ${props=> props.visible? \"block\" : \"none\"};\r\n`;\r\nfunction HiddenCover(props) {\r\n    return (<HiddenCoverStyle visible={props.visible} onClick={()=>props.clickAction()} color={props.color} />)\r\n}\r\n\r\nexport default HiddenCover","import styled from 'styled-components';\r\n\r\nconst SettingMenuStyle = styled.ul`\r\n    display: ${props => props.visible? \"block\" : \"none\"};\r\n    z-index: 9;\r\n    position: absolute;\r\n    top: -19px;\r\n    right: -5px;\r\n    background-color: #ffffffc9;\r\n    border-radius: 5px;\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    list-style: none;\r\n    padding:0;\r\n    width: ${props => props.size? props.size : \"150px\"};\r\n    li {\r\n        font-size: 0.9em;\r\n        color: ${props => props.color};\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 7px;\r\n        border-radius: 5px;\r\n        transition: 0.1s;\r\n        svg{\r\n            margin-right: 12px;\r\n        }\r\n        &:hover{\r\n            cursor: pointer;\r\n            background-color: ${props => props.color};\r\n            transition: 0.3s;\r\n            color: white;\r\n            svg{\r\n                color: white;\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport {SettingMenuStyle};","import { useMutation } from '@apollo/client';\r\nimport React, { useState } from 'react'\r\nimport { AiOutlineDelete, AiOutlineEdit, AiOutlineSetting } from 'react-icons/ai';\r\nimport { BiGroup } from 'react-icons/bi'\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { DELETE_CHANNEL } from '../Queries/ChannelQuery';\r\nimport HiddenCover from './HiddenCover';\r\nimport { SettingMenuStyle } from './SettingMenuStyle';\r\nconst ChannelItemStyle = styled.div`\r\n    width: 280px;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    margin-bottom: 11px;\r\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n    & > div{\r\n        padding: 12px;\r\n        & > span{\r\n            font-size: 0.7em;\r\n            color: white;\r\n            background: #ff32325e;\r\n            padding: 3px;\r\n            border-radius: 3px;\r\n        }\r\n        & > p {\r\n            padding: 5px;\r\n        }\r\n    }\r\n    h2{\r\n        margin-bottom: 0;\r\n    }\r\n\r\n`;\r\nconst MembersLink = styled(Link)`\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n    display: inherit;\r\n    justify-content: inherit;\r\n    align-items: inherit;\r\n`;\r\nconst ChannelHeader = styled.div`\r\n    display: flex;\r\n    padding: 0 !important;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    svg{\r\n        font-size: 16pt;\r\n        color: #32d0ff;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    & > div {\r\n        position: relative;\r\n    }\r\n`;\r\nconst ChannelNameStyle = styled.div`\r\n    font-size: 18pt;\r\n    width: 90%;\r\n`;\r\nconst ToMessagesStyle = styled(Link)`\r\n    display: block;\r\n    position: absolute;\r\n    width: 230px;\r\n    height: 51px;\r\n    z-index: 8;\r\n`;\r\nfunction ChannelItem(props) {\r\n    const [displaySetting, setDisplaySetting] = useState(false);\r\n    const toggelSetting = () => {\r\n        setDisplaySetting((prev) => !prev);\r\n    }\r\n    const [deleteChannelMutation, { data }] = useMutation(DELETE_CHANNEL, {\r\n        update: () => props.refetch(),\r\n        onCompleted: (data) => { console.log(data) }\r\n    })\r\n    const deleteChannel = (id) => {\r\n        deleteChannelMutation({ variables: { deleteChannelId: id } });\r\n    }\r\n    return (\r\n        <ChannelItemStyle>\r\n            <div>\r\n                <ChannelHeader>\r\n                    <ToMessagesStyle to={\"/messages/\" + props.data.id}></ToMessagesStyle>\r\n                        <ChannelNameStyle>{props.data.name}</ChannelNameStyle>\r\n                    <div onClick={() => toggelSetting()}>\r\n                        <AiOutlineSetting />\r\n                        <SettingMenuStyle color=\"#32d0ff\" size=\"110px\" visible={displaySetting}>\r\n                            <li onClick={() => props.dispalayChannelModal(props.data)}><AiOutlineEdit /> <span>Edit</span></li>\r\n                            <MembersLink to={\"/members/\" + props.data.id}><li onClick={() => props.dispalayChannelModal(props.data)}><BiGroup /> <span>Membres</span></li></MembersLink>\r\n                            <li onClick={() => deleteChannel(props.data.id)}><AiOutlineDelete /> <span>Delete</span></li>\r\n                        </SettingMenuStyle>\r\n                    </div>\r\n                </ChannelHeader>\r\n            </div>\r\n            <HiddenCover visible={displaySetting} clickAction={toggelSetting} />\r\n        </ChannelItemStyle>\r\n    )\r\n}\r\n\r\nexport default ChannelItem\r\n","import React, { useState, Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport HiddenCover from './HiddenCover';\r\n\r\nconst ModalStyle = styled.div`\r\n    display: ${props => props.visible ? \"block\" : \"none\"};\r\n    position: fixed;\r\n    top: 50% ;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n    z-index: 9;\r\n    min-width: ${props => {\r\n        switch (props.size) {\r\n            case 'sm':\r\n                return \"300px\";\r\n            case 'md':\r\n                return \"400px\";\r\n            case 'lg':\r\n                return \"520px\";\r\n            default:\r\n                return \"300px\";\r\n        }\r\n    }};\r\n`;\r\nconst ModalHeader = styled.div`\r\n    display: flex;\r\n    justify-items: center;\r\n    justify-content: space-between;\r\n    padding: 17px;\r\n    font-size: 16pt;\r\n    .CloseModale{\r\n        color: #4452a6;\r\n        vertical-align: bottom;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n        svg{\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n`;\r\nconst ModalContentStyle = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 12px;\r\n    padding-top: 0;\r\n`;\r\nfunction Modal(props) {\r\n    return (\r\n        <Fragment>\r\n            <ModalStyle visible={props.visible}>\r\n                <ModalHeader>\r\n                    <div className=\"ModalTitle\">{props.title ? props.title : \"Title of Modal\"}</div>\r\n                    <div className=\"CloseModale\" onClick={() => props.closeModal()}><AiOutlineCloseCircle /></div>\r\n                </ModalHeader>\r\n                <ModalContentStyle>\r\n                    {props.children}\r\n                </ModalContentStyle>\r\n            </ModalStyle>\r\n            <HiddenCover visible={props.visible} clickAction={props.closeModal} color=\"#0100079e\" />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import { useMutation } from '@apollo/client';\r\nimport React, { Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport { ADD_CHANNEL, SET_CHANNEL } from '../Queries/ChannelQuery';\r\n\r\nconst InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 5px;\r\n    label{\r\n        color: #32d0ff;\r\n        font-size: 0.9em;\r\n        padding: 3px;\r\n        font-style: italic;\r\n    }\r\n`;\r\nconst ModalButton = styled.button`\r\n    width: 100%;\r\n    height: 25px;\r\n    background: #32d0ff;\r\n    border: 0;\r\n    color: white;\r\n    border-radius: 5px;\r\n    margin-top: 7px;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #1ec4f5;\r\n    }\r\n`;\r\nfunction ChannelForm(props) {\r\n    const [applyChange] = useMutation(props.type === \"add\" ? ADD_CHANNEL : SET_CHANNEL, {\r\n        ignoreResults: false,\r\n        update: () => props.refetch(),\r\n        onCompleted: (data) => {console.log(data)}\r\n    });\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.formInput.channelName.replace(/\\s/g, '') !== '') {\r\n            if(props.type === \"add\"){\r\n                applyChange({ variables: { createChannelName: props.formInput.channelName } });\r\n            } else {\r\n                applyChange({ variables: { setChannelNameId: props.formInput.id, setChannelNameName: props.formInput.channelName } });\r\n                props.closeChannelModal();\r\n            }\r\n            props.resetForm();\r\n\r\n        } else {\r\n            alert('we can\\'t add or set channel without the name');\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <InputGroup>\r\n                <label htmlFor=\"channelName-modal-input\">Nom du channel</label>\r\n                <input type=\"text\" value={props.formInput.channelName} id=\"channelName-modal-input\" name=\"channelName\"\r\n                    onChange={(e) => props.handleInputChange(e)} />\r\n            </InputGroup>\r\n            <ModalButton onClick={(e) => handleSubmit(e)}>{props.type === \"add\" ? \"Ajouter\" : \"Modifier\"}</ModalButton>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChannelForm\r\n","import { useQuery } from '@apollo/client';\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport ChannelContainer from '../Component/ChannelContainer';\r\nimport ChannelItem from '../Component/ChannelItem';\r\nimport Modal from '../Component/Modal';\r\nimport ChannelForm from '../Form/ChannelForm';\r\nimport { GET_CHANNEL } from '../Queries/ChannelQuery';\r\nimport {useAuth} from '../Auth/AuthProvider';\r\n\r\nfunction Channel() {\r\n    const [displayAddChannelModal, setDisplayAddChannelModal] = useState(false);\r\n    const [displaySetChannelModal, setDisplaySetChannelModal] = useState(false);\r\n    const [channelFormInput, setChannelFormInput] = useState({\r\n        id: \"\",\r\n        channelName: \"\",\r\n    });\r\n    const auth = useAuth();\r\n    const { loading, error, data, refetch } = useQuery(GET_CHANNEL, {\r\n        pollInterval: 3000,\r\n    });\r\n    useEffect(() => {\r\n        refetch();\r\n        console.log('the first rerender', auth.user.id);\r\n    }, []);\r\n    if (loading) return 'Loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    const dispalayChannelModal = (data) => {\r\n        if (data !== undefined) {\r\n            setDisplaySetChannelModal(true);\r\n            if (data !== null) {\r\n                setChannelFormInput({\r\n                    id: data.id,\r\n                    channelName: data.name\r\n                });\r\n            }\r\n        } else {\r\n            setDisplayAddChannelModal(true);\r\n            resetChannelForm();\r\n            console.log(channelFormInput);\r\n        }\r\n    }\r\n    const closeChannelModal = () => {\r\n        setDisplaySetChannelModal(false);\r\n        setDisplayAddChannelModal(false);\r\n    }\r\n    const resetChannelForm = () => {\r\n        setChannelFormInput({ id: \"\", channelName: \"\" });\r\n    }\r\n    const handleInputChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        const formInputEdit = { ...channelFormInput };\r\n        formInputEdit[name] = value;\r\n        console.log(formInputEdit);\r\n        setChannelFormInput(formInputEdit);\r\n    }\r\n    return (\r\n        <Fragment>\r\n\r\n            <Modal title=\"Ajouter channel\" visible={displayAddChannelModal}\r\n                closeModal={closeChannelModal}\r\n            >\r\n                <ChannelForm\r\n                    type=\"add\"\r\n                    formInput={channelFormInput}\r\n                    handleInputChange={handleInputChange}\r\n                    resetForm={resetChannelForm}\r\n                    refetch={refetch}\r\n                    closeChannelModal={closeChannelModal}\r\n                />\r\n            </Modal>\r\n            <Modal title=\"Modifier channel\" visible={displaySetChannelModal}\r\n                closeModal={closeChannelModal}\r\n            >\r\n                <ChannelForm\r\n                    type=\"set\"\r\n                    formInput={channelFormInput}\r\n                    handleInputChange={handleInputChange}\r\n                    resetForm={resetChannelForm}\r\n                    refetch={refetch}\r\n                    closeChannelModal={closeChannelModal}\r\n                />\r\n            </Modal>\r\n            <ChannelContainer dispalayChannelModal={dispalayChannelModal}>\r\n                {\r\n                    data.channels != null ?\r\n                    data.channels.map(channel => <ChannelItem\r\n                        key={channel.id}\r\n                        data={channel}\r\n                        dispalayChannelModal={dispalayChannelModal}\r\n                        refetch={refetch} />)\r\n                    : \"\"\r\n                }\r\n            </ChannelContainer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Channel\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport Channel from './Channel';\r\nconst TaskContainerStyle = styled.div`\r\n    align-items: center;\r\n    width: 320px;\r\n    background-color: #eceefd;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n`;\r\nconst HomeTitle = styled.h1`\r\n    color: #4452a6;\r\n    text-align: center;\r\n    padding: 22px;\r\n`;\r\nconst SignLink = styled(Link)`\r\n    text-decoration: none;\r\n    & > div {\r\n        font-size: 16pt;\r\n        text-align: center;\r\n        padding: 17px 0;\r\n        width: 322px;\r\n    }\r\n`;\r\n\r\n\r\nfunction Home() {\r\n    const auth = useAuth();\r\n    return (\r\n        <Fragment>\r\n            {\r\n                auth.user == null ?\r\n                    <Fragment>\r\n                        <TaskContainerStyle>\r\n                            <HomeTitle>\r\n                                Tcha-Tcher\r\n                            </HomeTitle>\r\n                        </TaskContainerStyle>\r\n                        <SignLink to=\"/signin\">\r\n                            <TaskContainerStyle>Sign in </TaskContainerStyle>\r\n                        </SignLink>\r\n                        \r\n                        <SignLink to=\"/register\">\r\n                            <TaskContainerStyle>Sign up </TaskContainerStyle>\r\n                        </SignLink>\r\n                    </Fragment>\r\n                    : <Channel />\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\nimport { AiOutlineAppstoreAdd, AiOutlineUsergroupAdd } from 'react-icons/ai';\r\nimport { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TaskContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 320px;\r\n    background-color: #eceefd;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n`;\r\nconst TasksGroupeHeaderStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 90%;\r\n\r\n    background-color: #eceefd;\r\n    svg {\r\n        color: #4452a6;\r\n        font-size: 16pt;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    div{\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst AddTaskStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 90%;\r\n    max-width: 280px;\r\n    height: 50px;\r\n    margin-bottom: 17px;\r\n    background-color: #d9defa;\r\n    border-radius: 10px;\r\n    color: #4452a6;\r\n    svg{\r\n        margin: 0 12px;\r\n        font-size: 16pt;\r\n    }\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nfunction MemberContainer(props) {\r\n    return (\r\n        <TaskContainerStyle>\r\n            <TasksGroupeHeaderStyle>\r\n                {\r\n                    props.homeBackLink ?\r\n                    <Link to=\"/\" > <IoMdArrowRoundBack/></Link>\r\n                    : \"\"\r\n                }\r\n                <h2>Members of {props.colomunTitle}</h2>\r\n                <div onClick={() => props.dispalayMemberModal()}>\r\n                    <AiOutlineUsergroupAdd />\r\n                </div>\r\n            </TasksGroupeHeaderStyle>\r\n            {props.children}\r\n            <AddTaskStyle onClick={() => props.dispalayMemberModal()}> <AiOutlineUsergroupAdd /> <span>Add a member</span></AddTaskStyle>\r\n        </TaskContainerStyle>\r\n    )\r\n}\r\n\r\nexport default MemberContainer","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst CircleStyle = styled.div`\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    background-color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #4452a6;\r\n    font-size: 16pt;\r\n    font-weight: bolder;\r\n`;\r\nfunction FirstLetterDesign(props) {\r\n    const firstLetter = props.word.charAt(0).toUpperCase();\r\n    return (\r\n        <CircleStyle>\r\n            {firstLetter}\r\n        </CircleStyle>\r\n    )\r\n}\r\n\r\nexport default FirstLetterDesign\r\n","import { useMutation } from '@apollo/client';\r\nimport React, { Fragment } from 'react'\r\nimport { AiOutlineUserDelete } from 'react-icons/ai';\r\nimport { RiAdminLine } from 'react-icons/ri';\r\nimport styled from 'styled-components'\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { DELETE_MEMBER } from '../Queries/ChannelQuery';\r\nimport FirstLetterDesign from './FirstLetterDesign'\r\n\r\nconst MemberItemStyle = styled.div`\r\n    display: flex;\r\n    width: 275px;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 5px;\r\n    & > div{\r\n        padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    }\r\n    &:hover{\r\n        background-color: #4452ae1f;\r\n        border-radius: 5px;\r\n    }\r\n`;\r\nconst MemberDataStyle = styled.div`\r\n    p{\r\n        margin: 0;\r\n        padding: 2px 17px;\r\n        font-size: 11pt;\r\n    }\r\n    p:firstChild{\r\n        font-weight: bolder;\r\n    }\r\n`;\r\nconst LigneSeparatorStyle = styled.div`\r\n    width: 240px;\r\n    height: 1px;\r\n    background-color: white;\r\n`;\r\n\r\nconst DeleteMemberStyle = styled.div`\r\n    color: #4452a6;\r\n    font-size: 14pt;\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\nfunction MemberItem(props) {\r\n    const [deleteMemberMutaion] = useMutation(DELETE_MEMBER);\r\n    const auth = useAuth()\r\n    const deleteMember = (email, channel) => {\r\n        deleteMemberMutaion({variables:{rmMemberFromChannelEmail: email, rmMemberFromChannelChannel: channel}});\r\n        props.refetch();\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MemberItemStyle>\r\n                <div>\r\n                    <FirstLetterDesign word={props.data.name} />\r\n                    <MemberDataStyle>\r\n                        <p>{props.data.name}</p>\r\n                        <p>{props.data.email}</p>\r\n                    </MemberDataStyle>\r\n                </div>\r\n                {\r\n                    auth.user.id != props.data.id ? \r\n                    <DeleteMemberStyle onClick={() => deleteMember(props.data.email, props.channelId)}><AiOutlineUserDelete/></DeleteMemberStyle>\r\n                    : <DeleteMemberStyle><RiAdminLine/></DeleteMemberStyle>\r\n                }\r\n                \r\n            </MemberItemStyle>\r\n            <LigneSeparatorStyle/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MemberItem\r\n","import { useMutation } from '@apollo/client';\r\nimport React, { Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport { ADD_MEMBER } from '../Queries/ChannelQuery';\r\n\r\nconst InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 5px;\r\n    label{\r\n        color: #32d0ff;\r\n        font-size: 0.9em;\r\n        padding: 3px;\r\n        font-style: italic;\r\n    }\r\n`;\r\n\r\nconst ModalButton = styled.button`\r\n    width: 100%;\r\n    height: 25px;\r\n    background: #32d0ff;\r\n    border: 0;\r\n    color: white;\r\n    border-radius: 5px;\r\n    margin-top: 7px;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #1ec4f5;\r\n    }\r\n`;\r\n\r\nfunction MemberForm(props) {\r\n    const [applyChange] = useMutation(ADD_MEMBER, {\r\n        update: () => props.refetch(),\r\n        onCompleted: (data) => { console.log(data) }\r\n    });\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.formInput.memberEmail.replace(/\\s/g, '') !== '') {\r\n            applyChange({ variables: { addMemberToChannelEmail: props.formInput.memberEmail, addMemberToChannelChannel: props.formInput.channelId } });\r\n            props.resetForm();\r\n            props.closeMemberModal();\r\n        } else {\r\n            alert('we can\\'t add a member without the email');\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <InputGroup>\r\n                <label htmlFor=\"memberEmail-modal-input\">Email du membre</label>\r\n                <input type=\"text\" value={props.formInput.memberEmail} id=\"memberEmail-modal-input\" name=\"memberEmail\"\r\n                    onChange={(e) => props.handleInputChange(e)} />\r\n            </InputGroup>\r\n            <ModalButton onClick={(e) => handleSubmit(e)}>Ajouter</ModalButton>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MemberForm\r\n","import { useQuery } from '@apollo/client';\r\nimport React, { Fragment, useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport MemberContainer from '../Component/MemberContainer';\r\nimport MemberItem from '../Component/MemberItem';\r\nimport Modal from '../Component/Modal';\r\nimport MemberForm from '../Form/MemberFrom';\r\nimport { GET_CHANNEL_BY_ID, MEMBERS_CHANNEL } from '../Queries/ChannelQuery';\r\n\r\nfunction Member() {\r\n    let { id } = useParams();\r\n    const [displayAddMemberModal, setDisplayAddMemberModal] = useState(false);\r\n    const [memberFormInput, setMemberFormInput] = useState({\r\n        memberId: \"\",\r\n        memberName: \"\",\r\n        memberEmail: \"\",\r\n        channelId: id\r\n    });\r\n\r\n    const { loading, error, data, refetch } = useQuery(MEMBERS_CHANNEL, { variables: { getMembersChannel: id } });\r\n    const getChannelById = useQuery(GET_CHANNEL_BY_ID, { variables: { getChaneByIdChannelId: id } });\r\n    if (loading || getChannelById.loading) return 'Loading...';\r\n    if (error || getChannelById.error) return `Error! ${error.message}`;\r\n\r\n    const dispalayMemberModal = () => {\r\n        setDisplayAddMemberModal(true);\r\n    }\r\n    const closeMemberModal = () => {\r\n        setDisplayAddMemberModal(false);\r\n        resetMemberForm();\r\n    }\r\n\r\n    const resetMemberForm = () => {\r\n        const formInput = {...memberFormInput};\r\n        formInput[\"memberEmail\"] = \"\";\r\n        setMemberFormInput(formInput);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        const formInput = { ...memberFormInput };\r\n        formInput[name] = value;\r\n        console.log(formInput);\r\n        setMemberFormInput(formInput);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Fragment>\r\n                <Modal title=\"Ajouter membre\" visible={displayAddMemberModal}\r\n                    closeModal={closeMemberModal}\r\n                >\r\n                    <MemberForm\r\n                        type=\"add\"\r\n                        formInput={memberFormInput}\r\n                        handleInputChange={handleInputChange}\r\n                        resetForm={resetMemberForm}\r\n                        refetch={refetch}\r\n                        closeMemberModal={closeMemberModal}\r\n                    />\r\n                </Modal>\r\n\r\n                <MemberContainer homeBackLink={true} colomunTitle={getChannelById.data.channel.name} dispalayMemberModal={dispalayMemberModal}>\r\n                    {\r\n                        data.members != null?\r\n                        data.members.map(member => <MemberItem data={member} key={member.id} refetch={refetch} channelId={id} />)\r\n                        : \"\"\r\n                    }\r\n                </MemberContainer>\r\n            </Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Member\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst AlertMessageStype = styled.p`\r\n    width: 100%;\r\n    background-color: #ff000091;\r\n    color: white;\r\n    text-align: center;\r\n    padding: 22px;\r\n`;\r\nfunction AlertMessage(props) {\r\n    return (\r\n        <AlertMessageStype>\r\n            {props.message}\r\n        </AlertMessageStype>\r\n    )\r\n}\r\n\r\nexport default AlertMessage\r\n","import styled from 'styled-components';\r\n\r\nexport const FormStyle = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-width: 520px;\r\n    margin: 0 auto;\r\n    padding: 22px;\r\n    width: 220px;\r\n    background: #eceefd;\r\n    border-bottom: 5px ##4452a6 solid;\r\n    div{\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 210px;\r\n        padding: 5px;\r\n        label{\r\n            margin: 5px;\r\n            color: #4452a6;\r\n        }\r\n    }\r\n    input {\r\n        padding: 5px;\r\n        border: 1px lightgray solid;\r\n    }\r\n    button{\r\n        padding: 5px;\r\n        margin-top: 14px;\r\n        width: 210px;\r\n        border: 1px lightgray solid;\r\n        background-color: white;\r\n        color: #4452a6;\r\n        cursor: pointer;\r\n        transition: .3ms;\r\n        \r\n        border-radius: 7px;\r\n        &:hover{\r\n            background-color: #4452a6;\r\n            color: white;\r\n            transition: .3ms;\r\n        }\r\n    }\r\n    \r\n`;","import styled from \"styled-components\";\r\n\r\nexport const TitleStyle = styled.h1`\r\n    text-align: center;\r\n    color: #4452a6;\r\n    width: 220px;\r\n    margin: 12px auto;\r\n    padding: 22px;\r\n    background: #eceefd;\r\n    border-bottom: 5px #4452a6 solid;\r\n`;","import React, { useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider'\r\nimport AlertMessage from '../Component/AlertMessage';\r\nimport { FormStyle } from '../Component/FormStyle';\r\nimport { TitleStyle } from '../Component/TitleStyle';\r\n\r\nfunction Register() {\r\n    const auth = useAuth();\r\n    const [credential, setCredential] = useState({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordCheck: \"\"\r\n    });\r\n    const [alertMessage, setAlertMessage] = useState({\r\n        display: false,\r\n        msg: \"\"\r\n    });\r\n    const inputChangeHandler = (e) => {\r\n        const target = e.target;\r\n        const newCredential = { ...credential };\r\n        newCredential[target.name] = target.value;\r\n        setCredential(newCredential);\r\n    }\r\n    const RegisterHandler = async (e) => {\r\n        e.preventDefault();\r\n        if (credential.userName.trim() == \"\" ||\r\n            credential.password.trim() == \"\" ||\r\n            credential.email.trim() == \"\" ||\r\n            credential.passwordCheck.trim() == \"\") {\r\n            setAlertMessage({\r\n                display: true,\r\n                msg: \"Informations Manquantes\"\r\n            })\r\n            return;\r\n        } else if (credential.password != credential.passwordCheck) {\r\n            setAlertMessage({\r\n                display: true,\r\n                msg: \"Mot de passe Incorrecte\"\r\n            })\r\n            return;\r\n        }\r\n        if (auth.user == null) {\r\n            const result = await auth.register(credential);\r\n            if (result.status >= 400) {\r\n                setAlertMessage({\r\n                    display: true,\r\n                    msg: result.msg\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                auth.user != null ? <Redirect to=\"/\" /> : \"\"\r\n            }\r\n            <TitleStyle>Register</TitleStyle>\r\n            <FormStyle>\r\n                {\r\n                    alertMessage.display ? <AlertMessage message={alertMessage.msg} /> : \"\"\r\n                }\r\n                <div>\r\n                    <label htmlFor=\"user-name\"> User Name</label>\r\n                    <input type=\"text\" id=\"user-name\" name=\"userName\" onChange={e => inputChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email </label>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" onChange={e => inputChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password </label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" onChange={e => inputChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password-check\">Retype the password for check</label>\r\n                    <input type=\"password\" id=\"password-check\" name=\"passwordCheck\" onChange={e => inputChangeHandler(e)} />\r\n                </div>\r\n                <button onClick={e => RegisterHandler(e)}>Sign Up</button>\r\n            </FormStyle>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport AlertMessage from '../Component/AlertMessage';\r\nimport { FormStyle } from '../Component/FormStyle';\r\nimport { TitleStyle } from '../Component/TitleStyle';\r\n\r\nfunction SignIn() {\r\n    const [credential, setCredential] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [alertMessage, setAlertMessage] = useState({\r\n        display: false,\r\n        msg: \"\"\r\n    });\r\n    const auth = useAuth();\r\n    const loginHandler = async (e) => {\r\n        e.preventDefault();\r\n        if (auth.user == null) {\r\n            console.log(credential);\r\n            const result = await auth.login(credential.email, credential.password);\r\n            if (result.status > 400) {\r\n                const msg = {\r\n                    display: true,\r\n                    msg: result.msg\r\n                }\r\n                setAlertMessage(msg);\r\n            }\r\n        }\r\n    }\r\n    const inputChangeHandler = (e) => {\r\n        const target = e.target;\r\n        const newCredential = { ...credential };\r\n        newCredential[target.name] = target.value;\r\n        setCredential(newCredential);\r\n    }\r\n    return (\r\n        <div>\r\n            <TitleStyle>Sign in</TitleStyle>\r\n            <FormStyle>\r\n                {\r\n                    auth.user != null ? <Redirect to=\"/\" /> : \"\"\r\n                }\r\n                {\r\n                    alertMessage.display ? <AlertMessage message={alertMessage.msg} /> : \"\"\r\n                }\r\n                <div>\r\n                    <label htmlFor=\"email\">Email </label>\r\n                    <input id=\"email\" name=\"email\" value={credential.email} onChange={(e) => inputChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\">Password </label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" value={credential.password} onChange={(e) => inputChangeHandler(e)} />\r\n                </div>\r\n                <button onClick={e => loginHandler(e)}>Login</button>\r\n            </FormStyle>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AiOutlineAppstoreAdd, AiOutlineUsergroupAdd } from 'react-icons/ai';\r\nimport { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TaskContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 320px;\r\n    background-color: #eceefd;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n\r\n`;\r\nconst TasksGroupeHeaderStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 90%;\r\n\r\n    background-color: #eceefd;\r\n    svg {\r\n        color: #4452a6;\r\n        font-size: 16pt;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n    div{\r\n        position: relative;\r\n    }\r\n`;\r\n\r\nconst AddTaskStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 90%;\r\n    max-width: 280px;\r\n    height: 50px;\r\n    margin-bottom: 17px;\r\n    background-color: #d9defa;\r\n    border-radius: 10px;\r\n    color: #4452a6;\r\n    svg{\r\n        margin: 0 12px;\r\n        font-size: 16pt;\r\n    }\r\n    &:hover{\r\n        cursor: pointer;\r\n    }\r\n`;\r\nconst ContentStyle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 320px;\r\n    border-radius: 10px;\r\n    margin: 17px auto;\r\n`;\r\nfunction MessageContainer(props) {\r\n    return (\r\n        <TaskContainerStyle>\r\n            <TasksGroupeHeaderStyle>\r\n                {\r\n                    props.homeBackLink ?\r\n                        <Link to=\"/\" > <IoMdArrowRoundBack /></Link>\r\n                        : \"\"\r\n                }\r\n                <h2>Channel {props.columnTitle}</h2>\r\n                <div onClick={() => props.dispalayMemberModal()}>\r\n                    <AiOutlineUsergroupAdd />\r\n                </div>\r\n            </TasksGroupeHeaderStyle>\r\n            <p>Messages</p>\r\n            <ContentStyle>\r\n            {props.children}\r\n            </ContentStyle>\r\n        </TaskContainerStyle>\r\n    )\r\n}\r\n\r\nexport default MessageContainer\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nconst MessageInputFormStyle = styled.form`\r\n    display: flex;\r\n    position: sticky;\r\n    bottom: 0;\r\n    background: #eceefd;\r\n    width: 287px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n`;\r\nconst TextAreaMessageStyle = styled.textarea`\r\n    resize: none;\r\n    width: 220px;\r\n    height: 50px;\r\n    background: #eceefd;\r\n    border-color: #4452a6;\r\n    color: #4452a6;\r\n    bottom: 0;\r\n    background: #eceefd;\r\n    width: 287px;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    border-radius: 7px 0 0 7px;\r\n`;\r\nconst SendButton = styled.button`\r\n    background: #4452a6;\r\n    border: none;\r\n    color: white;\r\n    border-radius: 0 7px 7px 0;\r\n`;\r\n\r\nfunction MessageInput(props) {\r\n    const [message, setMessage] = useState(\"\");\r\n    const handelInputChange = (e) => {\r\n        const target = e.target;\r\n        setMessage(target.value);\r\n        console.log(target.value);\r\n    }\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        props.send(message);\r\n        setMessage(\"\");\r\n        props.refetch(); \r\n    }\r\n    return (\r\n        <MessageInputFormStyle>\r\n            <TextAreaMessageStyle value={message} name=\"message\" onChange={(e)=> handelInputChange(e)}></TextAreaMessageStyle>\r\n            <SendButton onClick={(e) => sendMessage(e)}>Send</SendButton>\r\n        </MessageInputFormStyle>\r\n    )\r\n}\r\n\r\nexport default MessageInput\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_MESSAGE = gql`\r\nquery Query($getMessageChannel: ID!) {\r\n    messages: getMessage(channel: $getMessageChannel) {\r\n        message {\r\n            user\r\n            id\r\n            channel\r\n            text\r\n        }\r\n        user {\r\n            id\r\n            name\r\n            email\r\n        }\r\n        __typename\r\n    }\r\n}\r\n`;\r\n\r\nexport const ADD_MESSAGE = gql`\r\n    mutation AddMessageMutation($addMessageChannel: ID!, $addMessageText: String!) {\r\n        addMessage(channel: $addMessageChannel, text: $addMessageText) {\r\n            id\r\n            channel\r\n            user\r\n            text\r\n            __typename\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_MESSAGE = gql`\r\n    mutation SetMessageMutation($setMessageMsgId: ID!, $setMessageText: String!) {\r\n        setMessage(msgId: $setMessageMsgId, text: $setMessageText) {\r\n            id\r\n            channel\r\n            text\r\n            user\r\n            __typename\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DELETE_MESSAGE = gql`\r\n    mutation RmMessageMutation($rmMessageMsgId: ID!) {\r\n        rmMessage(msgId: $rmMessageMsgId) {\r\n            id\r\n            channel\r\n            text\r\n            user\r\n            __typename\r\n        }\r\n    }\r\n`;","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport { useAuth } from '../Auth/AuthProvider';\r\nimport { FaEllipsisV } from \"react-icons/fa\";\r\nimport { SettingMenuStyle } from './SettingMenuStyle';\r\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\r\nimport HiddenCover from './HiddenCover';\r\nimport { useMutation } from '@apollo/client';\r\nimport { DELETE_MESSAGE } from '../Queries/MessageQuery';\r\nconst MessageItemStyle = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    width: 220px;\r\n    margin: 7px 20px;\r\n    border-radius: 12px;\r\n    &.owner{\r\n        background-color: white;\r\n        align-self: flex-start;\r\n        color: #4452a6;\r\n    }\r\n    &.other{\r\n        background-color: #4452a6;\r\n        align-self:flex-end;\r\n        color: white;\r\n    }\r\n    i{\r\n        font-size: 10pt;\r\n        display: block;\r\n        padding-left: 5px;\r\n    }\r\n`;\r\nconst AuthorNameStyle = styled.p`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    font-size: 10pt;\r\n    padding: 5px;\r\n    margin: 0;\r\n    &.other{\r\n        color: white;\r\n    }\r\n\r\n`;\r\nconst MessageStyle = styled.p`\r\n    &.other{\r\n        color: white;\r\n    }\r\n    &.owner{\r\n        color: #4452a6;\r\n    }\r\n    padding: 7px;\r\n    margin: 0;\r\n`;\r\nfunction MessageItem(props) {\r\n    const auth = useAuth();\r\n    const [displaySetting, setdisplaySetting] = useState(false);\r\n    const toggelSetting = () => {\r\n        setdisplaySetting(prev => !prev);\r\n    };\r\n    const [deleteMessageMutation] = useMutation(DELETE_MESSAGE, {\r\n        update: () => props.refetch(),\r\n\r\n    })\r\n    return (\r\n        <MessageItemStyle className={auth.user.id == props.data.user.id ? \"owner\" : \"other\"}>\r\n            <AuthorNameStyle>\r\n                {props.data.user.name}\r\n                {auth.user.id == props.data.user.id ? \r\n                <div onClick={() => toggelSetting()}>\r\n                    <FaEllipsisV />\r\n                    <SettingMenuStyle color=\"#4452a6\" size=\"110px\" visible={displaySetting}>\r\n                        <li onClick={() => props.showModal({id: props.data.message.id, \r\n                            message: props.data.message.text})}>\r\n                                <AiOutlineEdit /> <span>Edit</span></li>\r\n                        <li onClick={() => deleteMessageMutation({variables: {\r\n                            rmMessageMsgId: props.data.message.id\r\n                        }})}>\r\n                            <AiOutlineDelete /> <span>Delete</span></li>\r\n                    </SettingMenuStyle>\r\n                </div>\r\n                : \"\"}\r\n            </AuthorNameStyle>\r\n            <i>{props.data.user.email}</i>\r\n            <MessageStyle>\r\n                {props.data.message.text}\r\n            </MessageStyle>\r\n            <HiddenCover visible={displaySetting} clickAction={toggelSetting} />\r\n        </MessageItemStyle>\r\n    )\r\n}\r\n\r\nexport default MessageItem\r\n","import { useMutation } from '@apollo/client';\r\nimport React, { Fragment } from 'react'\r\nimport styled from 'styled-components';\r\nimport { SET_MESSAGE } from '../Queries/MessageQuery';\r\n\r\nconst InputGroup = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 5px;\r\n    label{\r\n        color: #32d0ff;\r\n        font-size: 0.9em;\r\n        padding: 3px;\r\n        font-style: italic;\r\n    }\r\n`;\r\nconst ModalButton = styled.button`\r\n    width: 100%;\r\n    height: 25px;\r\n    background: #32d0ff;\r\n    border: 0;\r\n    color: white;\r\n    border-radius: 5px;\r\n    margin-top: 7px;\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #1ec4f5;\r\n    }\r\n`;\r\nfunction MessageForm(props) {\r\n    const [applyChange] = useMutation(SET_MESSAGE, {\r\n        ignoreResults: false,\r\n        update: () => props.refetch(),\r\n        onCompleted: (data) => {console.log(data)},\r\n    });\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (props.formInput.message.replace(/\\s/g, '') !== '') {\r\n            applyChange({variables: {\r\n                setMessageMsgId: props.formInput.id,\r\n                setMessageText: props.formInput.message\r\n            }});\r\n            props.close();\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <InputGroup>\r\n                <label htmlFor=\"message-modal-input\">Nom du channel</label>\r\n                <input type=\"text\" value={props.formInput.message} id=\"message-modal-input\" name=\"message\"\r\n                    onChange={(e) => props.handleInputChange(e)} />\r\n            </InputGroup>\r\n            <ModalButton onClick={(e) => handleSubmit(e)}>Modifier</ModalButton>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","import { useMutation, useQuery } from '@apollo/client';\r\nimport React, { Fragment, useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/AuthProvider'\r\nimport MessageContainer from '../Component/MessageContainer';\r\nimport MessageInput from '../Component/MessageInput';\r\nimport MessageItem from '../Component/MessageItem';\r\nimport Modal from '../Component/Modal';\r\nimport MemberForm from '../Form/MemberFrom';\r\nimport MessageForm from '../Form/MessageForm';\r\nimport { GET_CHANNEL_BY_ID } from '../Queries/ChannelQuery';\r\nimport { ADD_MESSAGE, GET_MESSAGE } from '../Queries/MessageQuery';\r\n\r\nfunction Tchatchat() {\r\n    const auth = useAuth();\r\n    const { id } = useParams();\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n    const [formInput, setFormInput] = useState({\r\n        id: \"\",\r\n        message: \"\"\r\n    });\r\n    const handleInputChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        const formInputEdit = { ...formInput };\r\n        formInputEdit[name] = value;\r\n        console.log(formInputEdit);\r\n        setFormInput(formInputEdit);\r\n    }\r\n    const showModal = (data) => {\r\n        setFormInput({\r\n            id: data.id,\r\n            message: data.message\r\n        });\r\n        setDisplayModal(true);\r\n    }\r\n    const closeModal = () => {\r\n        setDisplayModal(false);\r\n    }\r\n    const [AddMessageMutation] = useMutation(ADD_MESSAGE);\r\n    const sendMessage = (message) => {\r\n        AddMessageMutation({\r\n            variables: {\r\n                addMessageChannel: id,\r\n                addMessageText: message\r\n            }\r\n        });\r\n    }\r\n\r\n    /* ADDING MEMBER */\r\n    const [displayAddMemberModal, setDisplayAddMemberModal] = useState(false);\r\n    const [memberFormInput, setMemberFormInput] = useState({\r\n        memberId: \"\",\r\n        memberName: \"\",\r\n        memberEmail: \"\",\r\n        channelId: id\r\n    });\r\n\r\n    const dispalayMemberModal = () => {\r\n        setDisplayAddMemberModal(true);\r\n    }\r\n    const closeMemberModal = () => {\r\n        setDisplayAddMemberModal(false);\r\n        resetMemberForm();\r\n    }\r\n\r\n    const resetMemberForm = () => {\r\n        const formInput = { ...memberFormInput };\r\n        formInput[\"memberEmail\"] = \"\";\r\n        setMemberFormInput(formInput);\r\n    }\r\n    const handleInputMemberChange = (e) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        const formInput = { ...memberFormInput };\r\n        formInput[name] = value;\r\n        console.log(formInput);\r\n        setMemberFormInput(formInput);\r\n    }\r\n    /* ADDING MEMBER */\r\n    const { loading, error, data, refetch } = useQuery(GET_MESSAGE, { \r\n        variables: { getMessageChannel: id },\r\n        pollInterval: 3000,\r\n    });\r\n    const channel = useQuery(GET_CHANNEL_BY_ID, { variables: { getChaneByIdChannelId: id } })\r\n    if (loading || channel.loading) return <div>Loding ...</div>;\r\n    if (error || channel.error) return error;\r\n    return (\r\n        <Fragment>\r\n            {\r\n                auth.user == null ?\r\n                    <Redirect to=\"/\" />\r\n                    : <Fragment>\r\n                        <Modal visible={displayModal} title=\"Modifier Message\" closeModal={closeModal} >\r\n                            <MessageForm formInput={formInput} handleInputChange={handleInputChange} refetch={refetch} close={closeModal} />\r\n                        </Modal>\r\n                        <Modal title=\"Ajouter membre\" visible={displayAddMemberModal}\r\n                            closeModal={closeMemberModal}\r\n                        >\r\n                            <MemberForm\r\n                                type=\"add\"\r\n                                formInput={memberFormInput}\r\n                                handleInputChange={handleInputMemberChange}\r\n                                resetForm={resetMemberForm}\r\n                                refetch={refetch}\r\n                                closeMemberModal={closeMemberModal}\r\n                            />\r\n                        </Modal>\r\n                        <MessageContainer homeBackLink={true} columnTitle={channel.data.channel.name} dispalayMemberModal={dispalayMemberModal}>\r\n                            {\r\n                                data.messages.map(msg => {\r\n                                    return (<MessageItem key={msg.message.id} data={msg} showModal={showModal} refetch={refetch} />)\r\n                                })\r\n                            }\r\n                            <MessageInput refetch={refetch} send={sendMessage} />\r\n                        </MessageContainer>\r\n                    </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Tchatchat\r\n","import { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { AuthProvider } from \"./Auth/AuthProvider\";\nimport LogoutBar from \"./Component/LogoutBar\";\nimport Home from \"./page/Home\";\nimport Member from \"./page/Member\";\nimport Register from \"./page/Register\";\nimport SignIn from \"./page/SignIn\";\nimport Tchatchat from \"./page/Tchatchat\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <AuthProvider>\n        <LogoutBar/>\n        <Router>\n          <Switch>\n\n            <Route exact path=\"/\" >\n              <Home />\n            </Route>\n\n            <Route exact path=\"/signin\">\n              <SignIn />\n            </Route>\n\n            <Route exact path=\"/register\">\n              <Register />\n            </Route>\n\n\n            <Route exact path=\"/members/:id\">\n              <Member />\n            </Route>\n\n            <Route exact path=\"/messages/:id\">\n              <Tchatchat />\n            </Route>\n\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink = createHttpLink({\n  uri: 'https://tchat-tcher.herokuapp.com/',\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n      <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}